apiVersion: lcm.mirantis.com/v1alpha1
kind: OpenStackDeployment
metadata:
  name: osh-dev
  namespace: openstack
  labels: {}
  annotations: {}
spec:
  draft: false
  openstack_version: ussuri
  preset: compute
  size: tiny
  internal_domain_name: cluster.local
  public_domain_name: it.just.works
  local_volume_storage_class: openstack-operator-bind-mounts
  persistent_volume_storage_class: kubernetes-hdd
  artifacts:
    images_base_url: mirantis.azurecr.io
    binary_base_url: https://binary.mirantis.com
  features:
    services:
    - key-manager
    ## Optional services
    # - alarming
    # - event
    # - metering
    # - metric
    # - object-storage
    ssl:
      public_endpoints:
        api_cert: |-
          -----BEGIN CERTIFICATE-----

          -----END CERTIFICATE-----
        api_key: |-
          -----BEGIN RSA PRIVATE KEY-----

          -----END RSA PRIVATE KEY-----
        ca_cert: |-
          -----BEGIN CERTIFICATE-----

          -----END CERTIFICATE-----
    neutron:
      tunnel_interface: tenant
      external_networks:
      - physnet: physnet1
        interface: pr-floating
        bridge: br-ex
        network_types:
        - flat
        vlan_ranges: null
        mtu: null
      floating_network:
        enabled: true
        physnet: physnet1
        subnet:
          range: 172.16.98.0/24
          pool_start: 172.16.98.100
          pool_end: 172.16.98.200
          gateway: 172.16.98.1
    nova:
      live_migration_interface: tenant
      images:
        backend: local
    octavia:
      lb_network:
        subnets:
        - pool_end: 172.32.255.254
          pool_start: 172.32.1.0
          range: 172.32.0.0/16
    nova:
      live_migration_interface: pr-tenant
      images:
        backend: ceph   ## Ceph or local
    ## Barbican
    barbican:
      backends:
        simple_crypto:
          enabled: true
    stacklight:
      user:
        password: stacklight
    #logging:
    #  neutron:
    #    level: DEBUG

  services:
    ingress:
      ingress:
        values:
          labels:
            server:
              node_selector_key: kubernetes.io/os
              node_selector_value: linux
    networking:
      neutron:
        values:
          conf:
            neutron:
              DEFAULT:
                global_physnet_mtu: 1480
    orchestration:
      heat:
        values:
          conf:
            heat:
              clients_heat:
                insecure: true
